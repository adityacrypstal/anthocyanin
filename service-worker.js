"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/anthocyanin/index.html","d30554e039574d3f1a8b42db2d4e3835"],["/anthocyanin/static/css/main.afd21a29.css","6f9d2d2098c8cad09e935298718e07fb"],["/anthocyanin/static/js/0.59d13c35.chunk.js","a35018f86b00b8a54d263f687bd9a936"],["/anthocyanin/static/js/1.d586e67d.chunk.js","57b94f25ced3915105d8593dd2a41f4c"],["/anthocyanin/static/js/10.3cca8208.chunk.js","74dbda3407aed4697641b025f5bb0b66"],["/anthocyanin/static/js/11.fb053ab8.chunk.js","ebba3290ed0ed6d926c95a066f1d9271"],["/anthocyanin/static/js/12.3be931de.chunk.js","492e403357c67730e4d5040f4cacc735"],["/anthocyanin/static/js/13.aeb21dc3.chunk.js","2b40fb3bb337ef07c7041609a0e8e936"],["/anthocyanin/static/js/14.7ebeee4a.chunk.js","6f39540bfbd0405335fdc1c47a7cb14c"],["/anthocyanin/static/js/15.d58a77a9.chunk.js","075ba2cf7436ebe6c114baecd2b2cebe"],["/anthocyanin/static/js/16.94b2850c.chunk.js","10c85ee3bd1a8d256326beb3b341fb3a"],["/anthocyanin/static/js/2.0368f176.chunk.js","18f4599baf937b6e54c0a7d621684cb5"],["/anthocyanin/static/js/3.b955fadb.chunk.js","2bbe1409ad9a8c4904a1627ede3132c2"],["/anthocyanin/static/js/4.2745e485.chunk.js","ec0c7512806893c49b2c2555fc2aacb2"],["/anthocyanin/static/js/5.f37ffa0a.chunk.js","2f477f2e8c9e12be369e8439119b0ac7"],["/anthocyanin/static/js/6.f53ed144.chunk.js","2f6b441cbc119b2cb3722f1d31a16dfe"],["/anthocyanin/static/js/7.2dc72f0b.chunk.js","244e9ccdb1803c9fc13faed9d759c74f"],["/anthocyanin/static/js/8.487f56e8.chunk.js","21b959988b845f5ed2bb96ce1b57af08"],["/anthocyanin/static/js/9.3aa8536e.chunk.js","136058252e4fbad68c321bb084c1baa4"],["/anthocyanin/static/js/main.821a4c35.js","b140e420639fa05fed10fa74dda05f87"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,n,t,a){var c=new URL(e);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),c=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var a=new Request(t,{credentials:"same-origin"});return fetch(a).then(function(n){if(!n.ok)throw new Error("Request for "+t+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(t,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!n.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);n=urlsToCacheKeys.has(t);n||(t=addDirectoryIndex(t,"index.html"),n=urlsToCacheKeys.has(t));!n&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(t=new URL("/anthocyanin/index.html",self.location).toString(),n=urlsToCacheKeys.has(t)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});